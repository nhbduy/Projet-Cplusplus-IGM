.TH "Constante" 3 "Tue Apr 12 2016" "Projet-Cplusplus-IGM" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Constante \- La classe \fBConstante\fP\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <constante\&.h>\fP
.PP
Inherits \fBExpression\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBConstante\fP ()"
.br
.RI "\fIConstructeur\&. \fP"
.ti -1c
.RI "\fBConstante\fP (const double=0\&.0)"
.br
.RI "\fIConstructeur\&. \fP"
.ti -1c
.RI "virtual \fB~Constante\fP ()"
.br
.RI "\fIDestructeur Destructeur de la classe \fBConstante\fP\&. \fP"
.ti -1c
.RI "virtual double \fBeval\fP () const "
.br
.RI "\fIEvalue l'expression Methode qui permet d'evaluer l'expression\&. \fP"
.ti -1c
.RI "\fBExpression\fP * \fBderiver\fP (const string &)"
.br
.RI "\fIDerive l'expression* Methode qui permet deriver l'expression\&. \fP"
.ti -1c
.RI "\fBExpression\fP * \fBsimplifier\fP ()"
.br
.RI "\fISimplifie l'expression Methode qui permet de simplifier l'expression\&. \fP"
.ti -1c
.RI "string \fBafficher\fP () const "
.br
.RI "\fIAffiche l'expression Methode qui permet d'afficher l'expression\&. \fP"
.ti -1c
.RI "\fBExpression\fP * \fBclone\fP () const "
.br
.RI "\fIclone l'expression Methode qui permet de cloner l'expression \fP"
.ti -1c
.RI "string \fBstring_from_double\fP (double val)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "ostream & \fBoperator<<\fP (ostream &, const \fBConstante\fP &)"
.br
.RI "\fIoperator<< Methode qui permet d'afficher l'expression \fP"
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
La classe \fBConstante\fP\&. 

Cette classe permet de représenter un expression constante qui est un valeur numérique de type double\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Constante::Constante ()"

.PP
Constructeur\&. Constructeur de la classe \fBConstante\fP 
.SS "Constante::Constante (const double val = \fC0\&.0\fP)"

.PP
Constructeur\&. Constructeur de la classe \fBConstante\fP
.PP
\fBParameters:\fP
.RS 4
\fIval\fP : le valeur 
.RE
.PP

.SS "Constante::~Constante ()\fC [virtual]\fP"

.PP
Destructeur Destructeur de la classe \fBConstante\fP\&. 
.SH "Member Function Documentation"
.PP 
.SS "string Constante::afficher () const\fC [virtual]\fP"

.PP
Affiche l'expression Methode qui permet d'afficher l'expression\&. 
.PP
\fBReturns:\fP
.RS 4
Le string d'expression 
.RE
.PP

.PP
Reimplemented from \fBExpression\fP\&.
.SS "\fBExpression\fP * Constante::clone () const\fC [virtual]\fP"

.PP
clone l'expression Methode qui permet de cloner l'expression 
.PP
\fBReturns:\fP
.RS 4
L'expression cloné 
.RE
.PP

.PP
Implements \fBExpression\fP\&.
.SS "\fBExpression\fP * Constante::deriver (const string & var)\fC [virtual]\fP"

.PP
Derive l'expression* Methode qui permet deriver l'expression\&. 
.PP
\fBReturns:\fP
.RS 4
L'expression derivé 
.RE
.PP

.PP
Implements \fBExpression\fP\&.
.SS "double Constante::eval () const\fC [virtual]\fP"

.PP
Evalue l'expression Methode qui permet d'evaluer l'expression\&. 
.PP
\fBReturns:\fP
.RS 4
Le valeur d'expression 
.RE
.PP

.PP
Implements \fBExpression\fP\&.
.SS "\fBExpression\fP * Constante::simplifier ()\fC [virtual]\fP"

.PP
Simplifie l'expression Methode qui permet de simplifier l'expression\&. 
.PP
\fBReturns:\fP
.RS 4
L'expression simplifié 
.RE
.PP

.PP
Implements \fBExpression\fP\&.
.SS "string Constante::string_from_double (double val)\fC [inline]\fP"

.SH "Friends And Related Function Documentation"
.PP 
.SS "ostream& operator<< (ostream & os, const \fBConstante\fP & constante)\fC [friend]\fP"

.PP
operator<< Methode qui permet d'afficher l'expression 

.SH "Author"
.PP 
Generated automatically by Doxygen for Projet-Cplusplus-IGM from the source code\&.
